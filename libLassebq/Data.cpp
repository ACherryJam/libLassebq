#include "Data.h"

/*  A table of event indexes|friendly event names.
 *  This hashmap is not constant because 'Collision_' events may be added to it.
 */

#pragma warning( push )
#pragma warning( disable : 4244 )
std::unordered_map<unsigned long long, std::string> mapOfEvents = {
	{ makeevkey(ev_create, 0), "Create" },
	{ makeevkey(ev_destroy, 0), "Destroy" },
	{ makeevkey(ev_pre_create, 0), "PreCreate" },
	{ makeevkey(ev_clean_up, 0), "CleanUp" },

	{ makeevkey(ev_step, ev_step_normal), "Step" },
	{ makeevkey(ev_step, ev_step_begin), "BeginStep" },
	{ makeevkey(ev_step, ev_step_end), "EndStep" },

	{ makeevkey(ev_alarm, 0), "Alarm0" },
	{ makeevkey(ev_alarm, 1), "Alarm1" },
	{ makeevkey(ev_alarm, 2), "Alarm2" },
	{ makeevkey(ev_alarm, 3), "Alarm3" },
	{ makeevkey(ev_alarm, 4), "Alarm4" },
	{ makeevkey(ev_alarm, 5), "Alarm5" },
	{ makeevkey(ev_alarm, 6), "Alarm6" },
	{ makeevkey(ev_alarm, 7), "Alarm7" },
	{ makeevkey(ev_alarm, 8), "Alarm8" },
	{ makeevkey(ev_alarm, 9), "Alarm9" },
	{ makeevkey(ev_alarm, 10), "Alarm10" },
	{ makeevkey(ev_alarm, 11), "Alarm11" },

	{ makeevkey(ev_mouse, ev_left_button), "LeftMouseButton" },
	{ makeevkey(ev_mouse, ev_right_button), "RightMouseButton" },
	{ makeevkey(ev_mouse, ev_middle_button), "MiddleMouseButton" },
	{ makeevkey(ev_mouse, ev_no_button), "NoMouseButton" },

	{ makeevkey(ev_mouse, ev_left_press), "LeftMousePress" },
	{ makeevkey(ev_mouse, ev_right_press), "RightMousePress" },
	{ makeevkey(ev_mouse, ev_middle_press), "MiddleMousePress" },
	
	{ makeevkey(ev_mouse, ev_left_release), "LeftMouseRelease" },
	{ makeevkey(ev_mouse, ev_right_release), "RightMouseRelease" },
	{ makeevkey(ev_mouse, ev_middle_release), "MiddleMouseRelease" },

	{ makeevkey(ev_mouse, ev_mouse_enter), "MouseEnter" },
	{ makeevkey(ev_mouse, ev_mouse_leave), "MouseLeave" },

	{ makeevkey(ev_mouse, ev_mouse_wheel_up), "MouseWheelUp" },
	{ makeevkey(ev_mouse, ev_mouse_wheel_down), "MouseWheelDown" },

	{ makeevkey(ev_mouse, ev_global_left_button), "LeftGlobalMouseButton" },
	{ makeevkey(ev_mouse, ev_global_right_button), "RightGlobalMouseButton" },
	{ makeevkey(ev_mouse, ev_global_middle_button), "MiddleGlobalMouseButton" },

	{ makeevkey(ev_mouse, ev_global_left_press), "LeftGlobalMousePress" },
	{ makeevkey(ev_mouse, ev_global_right_press), "RightGlobalMousePress" },
	{ makeevkey(ev_mouse, ev_global_middle_press), "MiddleGlobalMousePress" },

	{ makeevkey(ev_mouse, ev_global_left_release), "LeftGlobalMouseRelease" },
	{ makeevkey(ev_mouse, ev_global_right_release), "RightGlobalMouseRelease" },
	{ makeevkey(ev_mouse, ev_global_middle_release), "MiddleGlobalMouseRelease" },

	{ makeevkey(ev_other, ev_outside), "OutsideRoom" },
	{ makeevkey(ev_other, ev_boundary), "Boundary" },
	{ makeevkey(ev_other, ev_game_start), "GameStart" },
	{ makeevkey(ev_other, ev_game_end), "GameEnd" },
	{ makeevkey(ev_other, ev_room_start), "RoomStart" },
	{ makeevkey(ev_other, ev_room_end), "RoomEnd" },

	{ makeevkey(ev_other, ev_no_more_lives), "NoMoreLives" },
	{ makeevkey(ev_other, ev_no_more_health), "NoMoreHealth" },
	{ makeevkey(ev_other, ev_animation_end), "AnimationEnd" },
	{ makeevkey(ev_other, ev_end_of_path), "EndOfPath" },
	{ makeevkey(ev_other, ev_close_button), "CloseButton" },

	{ makeevkey(ev_other, ev_user0), "UserEvent0" },
	{ makeevkey(ev_other, ev_user1), "UserEvent1" },
	{ makeevkey(ev_other, ev_user2), "UserEvent2" },
	{ makeevkey(ev_other, ev_user3), "UserEvent3" },
	{ makeevkey(ev_other, ev_user4), "UserEvent4" },
	{ makeevkey(ev_other, ev_user5), "UserEvent5" },
	{ makeevkey(ev_other, ev_user6), "UserEvent6" },
	{ makeevkey(ev_other, ev_user7), "UserEvent7" },
	{ makeevkey(ev_other, ev_user8), "UserEvent8" },
	{ makeevkey(ev_other, ev_user9), "UserEvent9" },
	{ makeevkey(ev_other, ev_user10), "UserEvent10" },
	{ makeevkey(ev_other, ev_user11), "UserEvent11" },
	{ makeevkey(ev_other, ev_user12), "UserEvent12" },
	{ makeevkey(ev_other, ev_user13), "UserEvent13" },
	{ makeevkey(ev_other, ev_user14), "UserEvent14" },
	{ makeevkey(ev_other, ev_user15), "UserEvent15" },

	{ makeevkey(ev_other, ev_audio_playback), "AsyncAudioPlayback" },
	{ makeevkey(ev_other, ev_audio_recording), "AsyncAudioRecording" },
	{ makeevkey(ev_other, ev_cloud), "AsyncCloud" },
	{ makeevkey(ev_other, ev_dialog), "AsyncDialog" },
	{ makeevkey(ev_other, ev_async), "AsyncHTTP" },
	{ makeevkey(ev_other, ev_iap), "AsyncIAP" },
	{ makeevkey(ev_other, ev_image_loaded), "AsyncImageLoaded" },
	{ makeevkey(ev_other, ev_sound_loaded), "AsyncSoundLoaded" },
	{ makeevkey(ev_other, ev_networking), "AsyncNetworking" },
	{ makeevkey(ev_other, ev_push_notification), "AsyncPushNotification" },
	{ makeevkey(ev_other, ev_save_load), "AsyncSaveLoad" },
	{ makeevkey(ev_other, ev_social), "AsyncSocial" }, // also used by native extensions.
	{ makeevkey(ev_other, ev_steam), "AsyncSteam" }, // workshop events.
	{ makeevkey(ev_other, ev_system_event), "AsyncSystem" },

	// Gesture events are GMS 2 only:
	{ makeevkey(ev_gesture, ev_gesture_tap), "GestureTap" },
	{ makeevkey(ev_gesture, ev_gesture_double_tap), "GestureDoubleTap" },
	{ makeevkey(ev_gesture, ev_gesture_drag_start), "GestureDragStart" },
	{ makeevkey(ev_gesture, ev_gesture_dragging), "GestureDragging" },
	{ makeevkey(ev_gesture, ev_gesture_drag_end), "GestureDragEnd" },
	{ makeevkey(ev_gesture, ev_gesture_flick), "GestureFlick" },
	{ makeevkey(ev_gesture, ev_gesture_pinch_start), "GesturePinchStart" },
	{ makeevkey(ev_gesture, ev_gesture_pinch_in), "GesturePinchIn" },
	{ makeevkey(ev_gesture, ev_gesture_pinch_out), "GesturePinchOut" },
	{ makeevkey(ev_gesture, ev_gesture_pinch_end), "GesturePinchEnd" },
	{ makeevkey(ev_gesture, ev_gesture_rotate_start), "GestureRotateStart" },
	{ makeevkey(ev_gesture, ev_gesture_rotating), "GestureRotating" },
	{ makeevkey(ev_gesture, ev_gesture_rotate_end), "GestureRotateEnd" },
	{ makeevkey(ev_gesture, ev_global_gesture_tap), "GestureGlobalTap" },
	{ makeevkey(ev_gesture, ev_global_gesture_double_tap), "GestureGlobalDoubleTap" },
	{ makeevkey(ev_gesture, ev_global_gesture_drag_start), "GestureGlobalDragStart" },
	{ makeevkey(ev_gesture, ev_global_gesture_dragging), "GestureGlobalDragging" },
	{ makeevkey(ev_gesture, ev_global_gesture_drag_end), "GestureGlobalDragEnd" },
	{ makeevkey(ev_gesture, ev_global_gesture_flick), "GestureGlobalFlick" },
	{ makeevkey(ev_gesture, ev_global_gesture_pinch_start), "GestureGlobalPinchStart" },
	{ makeevkey(ev_gesture, ev_global_gesture_pinch_in), "GestureGlobalPinchIn" },
	{ makeevkey(ev_gesture, ev_global_gesture_pinch_out), "GestureGlobalPinchOut" },
	{ makeevkey(ev_gesture, ev_global_gesture_pinch_end), "GestureGlobalPinchEnd" },
	{ makeevkey(ev_gesture, ev_global_gesture_rotate_start), "GestureGlobalRotateStart" },
	{ makeevkey(ev_gesture, ev_global_gesture_rotating), "GestureGlobalRotating" },
	{ makeevkey(ev_gesture, ev_global_gesture_rotate_end), "GestureGlobalRotateEnd" },

	{ makeevkey(ev_draw, 0), "Draw" },
	{ makeevkey(ev_draw, ev_gui), "DrawGUI" },
	{ makeevkey(ev_draw, ev_gui_begin), "DrawGUIBegin" },
	{ makeevkey(ev_draw, ev_gui_end), "DrawGUIEnd" },
	{ makeevkey(ev_draw, ev_draw_begin), "DrawBegin" },
	{ makeevkey(ev_draw, ev_draw_end), "DrawEnd" },
	{ makeevkey(ev_draw, ev_draw_pre), "PreDraw" },
	{ makeevkey(ev_draw, ev_draw_post), "PostDraw" },

	{ makeevkey(ev_keyboard, vk_nokey), "NoKey" },
	{ makeevkey(ev_keyboard, vk_anykey), "AnyKey" },
	{ makeevkey(ev_keyboard, vk_enter), "Enter" },
	{ makeevkey(ev_keyboard, vk_shift), "Shift" },
	{ makeevkey(ev_keyboard, vk_control), "Control" },
	{ makeevkey(ev_keyboard, vk_alt), "Alt" },
	{ makeevkey(ev_keyboard, vk_escape), "Escape" },
	{ makeevkey(ev_keyboard, vk_space), "Space" },
	{ makeevkey(ev_keyboard, vk_backspace), "Backspace" },
	{ makeevkey(ev_keyboard, vk_tab), "Tab" },
	{ makeevkey(ev_keyboard, vk_pause), "Pause" },
	{ makeevkey(ev_keyboard, vk_printscreen), "PrintScreen" },
	{ makeevkey(ev_keyboard, vk_left), "Left" },
	{ makeevkey(ev_keyboard, vk_right), "Right" },
	{ makeevkey(ev_keyboard, vk_up), "Up" },
	{ makeevkey(ev_keyboard, vk_down), "Down" },
	{ makeevkey(ev_keyboard, vk_home), "Home" },
	{ makeevkey(ev_keyboard, vk_end), "End" },
	{ makeevkey(ev_keyboard, vk_delete), "Delete" },
	{ makeevkey(ev_keyboard, vk_insert), "Insert" },
	{ makeevkey(ev_keyboard, vk_pageup), "PageUp" },
	{ makeevkey(ev_keyboard, vk_pagedown), "PageDown" },
	{ makeevkey(ev_keyboard, vk_f1), "F1" },
	{ makeevkey(ev_keyboard, vk_f2), "F2" },
	{ makeevkey(ev_keyboard, vk_f3), "F3" },
	{ makeevkey(ev_keyboard, vk_f4), "F4" },
	{ makeevkey(ev_keyboard, vk_f5), "F5" },
	{ makeevkey(ev_keyboard, vk_f6), "F6" },
	{ makeevkey(ev_keyboard, vk_f7), "F7" },
	{ makeevkey(ev_keyboard, vk_f8), "F8" },
	{ makeevkey(ev_keyboard, vk_f9), "F9" },
	{ makeevkey(ev_keyboard, vk_f10), "F10" },
	{ makeevkey(ev_keyboard, vk_f11), "F11" },
	{ makeevkey(ev_keyboard, vk_f12), "F12" },
	{ makeevkey(ev_keyboard, vk_numpad0), "Numpad0" },
	{ makeevkey(ev_keyboard, vk_numpad1), "Numpad1" },
	{ makeevkey(ev_keyboard, vk_numpad2), "Numpad2" },
	{ makeevkey(ev_keyboard, vk_numpad3), "Numpad3" },
	{ makeevkey(ev_keyboard, vk_numpad4), "Numpad4" },
	{ makeevkey(ev_keyboard, vk_numpad5), "Numpad5" },
	{ makeevkey(ev_keyboard, vk_numpad6), "Numpad6" },
	{ makeevkey(ev_keyboard, vk_numpad7), "Numpad7" },
	{ makeevkey(ev_keyboard, vk_numpad8), "Numpad8" },
	{ makeevkey(ev_keyboard, vk_numpad9), "Numpad9" },
	{ makeevkey(ev_keyboard, vk_divide), "Divide" },
	{ makeevkey(ev_keyboard, vk_multiply), "Multiply" },
	{ makeevkey(ev_keyboard, vk_subtract), "Subtract" },
	{ makeevkey(ev_keyboard, vk_add), "Add" },
	{ makeevkey(ev_keyboard, vk_decimal), "Decimal" },
	{ makeevkey(ev_keyboard, vk_lshift), "LShift" },
	{ makeevkey(ev_keyboard, vk_lcontrol), "LControl" },
	{ makeevkey(ev_keyboard, vk_lalt), "LAlt" },
	{ makeevkey(ev_keyboard, vk_rshift), "RShift" },
	{ makeevkey(ev_keyboard, vk_ralt), "RAlt" },
	{ makeevkey(ev_keyboard, vk_rcontrol), "RControl" },

	{ makeevkey(ev_keypress, vk_nokey), "PressNoKey" },
	{ makeevkey(ev_keypress, vk_anykey), "PressAnyKey" },
	{ makeevkey(ev_keypress, vk_enter), "PressEnter" },
	{ makeevkey(ev_keypress, vk_shift), "PressShift" },
	{ makeevkey(ev_keypress, vk_control), "PressControl" },
	{ makeevkey(ev_keypress, vk_alt), "PressAlt" },
	{ makeevkey(ev_keypress, vk_escape), "PressEscape" },
	{ makeevkey(ev_keypress, vk_space), "PressSpace" },
	{ makeevkey(ev_keypress, vk_backspace), "PressBackspace" },
	{ makeevkey(ev_keypress, vk_tab), "PressTab" },
	{ makeevkey(ev_keypress, vk_pause), "PressPause" },
	{ makeevkey(ev_keypress, vk_printscreen), "PressPrintScreen" },
	{ makeevkey(ev_keypress, vk_left), "PressLeft" },
	{ makeevkey(ev_keypress, vk_right), "PressRight" },
	{ makeevkey(ev_keypress, vk_up), "PressUp" },
	{ makeevkey(ev_keypress, vk_down), "PressDown" },
	{ makeevkey(ev_keypress, vk_home), "PressHome" },
	{ makeevkey(ev_keypress, vk_end), "PressEnd" },
	{ makeevkey(ev_keypress, vk_delete), "PressDelete" },
	{ makeevkey(ev_keypress, vk_insert), "PressInsert" },
	{ makeevkey(ev_keypress, vk_pageup), "PressPageUp" },
	{ makeevkey(ev_keypress, vk_pagedown), "PressPageDown" },
	{ makeevkey(ev_keypress, vk_f1), "PressF1" },
	{ makeevkey(ev_keypress, vk_f2), "PressF2" },
	{ makeevkey(ev_keypress, vk_f3), "PressF3" },
	{ makeevkey(ev_keypress, vk_f4), "PressF4" },
	{ makeevkey(ev_keypress, vk_f5), "PressF5" },
	{ makeevkey(ev_keypress, vk_f6), "PressF6" },
	{ makeevkey(ev_keypress, vk_f7), "PressF7" },
	{ makeevkey(ev_keypress, vk_f8), "PressF8" },
	{ makeevkey(ev_keypress, vk_f9), "PressF9" },
	{ makeevkey(ev_keypress, vk_f10), "PressF10" },
	{ makeevkey(ev_keypress, vk_f11), "PressF11" },
	{ makeevkey(ev_keypress, vk_f12), "PressF12" },
	{ makeevkey(ev_keypress, vk_numpad0), "PressNumpad0" },
	{ makeevkey(ev_keypress, vk_numpad1), "PressNumpad1" },
	{ makeevkey(ev_keypress, vk_numpad2), "PressNumpad2" },
	{ makeevkey(ev_keypress, vk_numpad3), "PressNumpad3" },
	{ makeevkey(ev_keypress, vk_numpad4), "PressNumpad4" },
	{ makeevkey(ev_keypress, vk_numpad5), "PressNumpad5" },
	{ makeevkey(ev_keypress, vk_numpad6), "PressNumpad6" },
	{ makeevkey(ev_keypress, vk_numpad7), "PressNumpad7" },
	{ makeevkey(ev_keypress, vk_numpad8), "PressNumpad8" },
	{ makeevkey(ev_keypress, vk_numpad9), "PressNumpad9" },
	{ makeevkey(ev_keypress, vk_divide), "PressDivide" },
	{ makeevkey(ev_keypress, vk_multiply), "PressMultiply" },
	{ makeevkey(ev_keypress, vk_subtract), "PressSubtract" },
	{ makeevkey(ev_keypress, vk_add), "PressAdd" },
	{ makeevkey(ev_keypress, vk_decimal), "PressDecimal" },
	{ makeevkey(ev_keypress, vk_lshift), "PressLShift" },
	{ makeevkey(ev_keypress, vk_lcontrol), "PressLControl" },
	{ makeevkey(ev_keypress, vk_lalt), "PressLAlt" },
	{ makeevkey(ev_keypress, vk_rshift), "PressRShift" },
	{ makeevkey(ev_keypress, vk_ralt), "PressRAlt" },
	{ makeevkey(ev_keypress, vk_rcontrol), "PressRControl" },

	{ makeevkey(ev_keyrelease, vk_nokey), "ReleaseNoKey" },
	{ makeevkey(ev_keyrelease, vk_anykey), "ReleaseAnyKey" },
	{ makeevkey(ev_keyrelease, vk_enter), "ReleaseEnter" },
	{ makeevkey(ev_keyrelease, vk_shift), "ReleaseShift" },
	{ makeevkey(ev_keyrelease, vk_control), "ReleaseControl" },
	{ makeevkey(ev_keyrelease, vk_alt), "ReleaseAlt" },
	{ makeevkey(ev_keyrelease, vk_escape), "ReleaseEscape" },
	{ makeevkey(ev_keyrelease, vk_space), "ReleaseSpace" },
	{ makeevkey(ev_keyrelease, vk_backspace), "ReleaseBackspace" },
	{ makeevkey(ev_keyrelease, vk_tab), "ReleaseTab" },
	{ makeevkey(ev_keyrelease, vk_pause), "ReleasePause" },
	{ makeevkey(ev_keyrelease, vk_printscreen), "ReleasePrintScreen" },
	{ makeevkey(ev_keyrelease, vk_left), "ReleaseLeft" },
	{ makeevkey(ev_keyrelease, vk_right), "ReleaseRight" },
	{ makeevkey(ev_keyrelease, vk_up), "ReleaseUp" },
	{ makeevkey(ev_keyrelease, vk_down), "ReleaseDown" },
	{ makeevkey(ev_keyrelease, vk_home), "ReleaseHome" },
	{ makeevkey(ev_keyrelease, vk_end), "ReleaseEnd" },
	{ makeevkey(ev_keyrelease, vk_delete), "ReleaseDelete" },
	{ makeevkey(ev_keyrelease, vk_insert), "ReleaseInsert" },
	{ makeevkey(ev_keyrelease, vk_pageup), "ReleasePageUp" },
	{ makeevkey(ev_keyrelease, vk_pagedown), "ReleasePageDown" },
	{ makeevkey(ev_keyrelease, vk_f1), "ReleaseF1" },
	{ makeevkey(ev_keyrelease, vk_f2), "ReleaseF2" },
	{ makeevkey(ev_keyrelease, vk_f3), "ReleaseF3" },
	{ makeevkey(ev_keyrelease, vk_f4), "ReleaseF4" },
	{ makeevkey(ev_keyrelease, vk_f5), "ReleaseF5" },
	{ makeevkey(ev_keyrelease, vk_f6), "ReleaseF6" },
	{ makeevkey(ev_keyrelease, vk_f7), "ReleaseF7" },
	{ makeevkey(ev_keyrelease, vk_f8), "ReleaseF8" },
	{ makeevkey(ev_keyrelease, vk_f9), "ReleaseF9" },
	{ makeevkey(ev_keyrelease, vk_f10), "ReleaseF10" },
	{ makeevkey(ev_keyrelease, vk_f11), "ReleaseF11" },
	{ makeevkey(ev_keyrelease, vk_f12), "ReleaseF12" },
	{ makeevkey(ev_keyrelease, vk_numpad0), "ReleaseNumpad0" },
	{ makeevkey(ev_keyrelease, vk_numpad1), "ReleaseNumpad1" },
	{ makeevkey(ev_keyrelease, vk_numpad2), "ReleaseNumpad2" },
	{ makeevkey(ev_keyrelease, vk_numpad3), "ReleaseNumpad3" },
	{ makeevkey(ev_keyrelease, vk_numpad4), "ReleaseNumpad4" },
	{ makeevkey(ev_keyrelease, vk_numpad5), "ReleaseNumpad5" },
	{ makeevkey(ev_keyrelease, vk_numpad6), "ReleaseNumpad6" },
	{ makeevkey(ev_keyrelease, vk_numpad7), "ReleaseNumpad7" },
	{ makeevkey(ev_keyrelease, vk_numpad8), "ReleaseNumpad8" },
	{ makeevkey(ev_keyrelease, vk_numpad9), "ReleaseNumpad9" },
	{ makeevkey(ev_keyrelease, vk_divide), "ReleaseDivide" },
	{ makeevkey(ev_keyrelease, vk_multiply), "ReleaseMultiply" },
	{ makeevkey(ev_keyrelease, vk_subtract), "ReleaseSubtract" },
	{ makeevkey(ev_keyrelease, vk_add), "ReleaseAdd" },
	{ makeevkey(ev_keyrelease, vk_decimal), "ReleaseDecimal" },
	{ makeevkey(ev_keyrelease, vk_lshift), "ReleaseLShift" },
	{ makeevkey(ev_keyrelease, vk_lcontrol), "ReleaseLControl" },
	{ makeevkey(ev_keyrelease, vk_lalt), "ReleaseLAlt" },
	{ makeevkey(ev_keyrelease, vk_rshift), "ReleaseRShift" },
	{ makeevkey(ev_keyrelease, vk_ralt), "ReleaseRAlt" },
	{ makeevkey(ev_keyrelease, vk_rcontrol), "ReleaseRControl" },

	{ makeevkey(ev_keyboard, 65), "KeyA" },
	{ makeevkey(ev_keypress, 65), "PressKeyA" },
	{ makeevkey(ev_keyrelease, 65), "ReleaseKeyA" },
	{ makeevkey(ev_keyboard, 66), "KeyB" },
	{ makeevkey(ev_keypress, 66), "PressKeyB" },
	{ makeevkey(ev_keyrelease, 66), "ReleaseKeyB" },
	{ makeevkey(ev_keyboard, 67), "KeyC" },
	{ makeevkey(ev_keypress, 67), "PressKeyC" },
	{ makeevkey(ev_keyrelease, 67), "ReleaseKeyC" },
	{ makeevkey(ev_keyboard, 68), "KeyD" },
	{ makeevkey(ev_keypress, 68), "PressKeyD" },
	{ makeevkey(ev_keyrelease, 68), "ReleaseKeyD" },
	{ makeevkey(ev_keyboard, 69), "KeyE" },
	{ makeevkey(ev_keypress, 69), "PressKeyE" },
	{ makeevkey(ev_keyrelease, 69), "ReleaseKeyE" },
	{ makeevkey(ev_keyboard, 70), "KeyF" },
	{ makeevkey(ev_keypress, 70), "PressKeyF" },
	{ makeevkey(ev_keyrelease, 70), "ReleaseKeyF" },
	{ makeevkey(ev_keyboard, 71), "KeyG" },
	{ makeevkey(ev_keypress, 71), "PressKeyG" },
	{ makeevkey(ev_keyrelease, 71), "ReleaseKeyG" },
	{ makeevkey(ev_keyboard, 72), "KeyH" },
	{ makeevkey(ev_keypress, 72), "PressKeyH" },
	{ makeevkey(ev_keyrelease, 72), "ReleaseKeyH" },
	{ makeevkey(ev_keyboard, 73), "KeyI" },
	{ makeevkey(ev_keypress, 73), "PressKeyI" },
	{ makeevkey(ev_keyrelease, 73), "ReleaseKeyI" },
	{ makeevkey(ev_keyboard, 74), "KeyJ" },
	{ makeevkey(ev_keypress, 74), "PressKeyJ" },
	{ makeevkey(ev_keyrelease, 74), "ReleaseKeyJ" },
	{ makeevkey(ev_keyboard, 75), "KeyK" },
	{ makeevkey(ev_keypress, 75), "PressKeyK" },
	{ makeevkey(ev_keyrelease, 75), "ReleaseKeyK" },
	{ makeevkey(ev_keyboard, 76), "KeyL" },
	{ makeevkey(ev_keypress, 76), "PressKeyL" },
	{ makeevkey(ev_keyrelease, 76), "ReleaseKeyL" },
	{ makeevkey(ev_keyboard, 77), "KeyM" },
	{ makeevkey(ev_keypress, 77), "PressKeyM" },
	{ makeevkey(ev_keyrelease, 77), "ReleaseKeyM" },
	{ makeevkey(ev_keyboard, 78), "KeyN" },
	{ makeevkey(ev_keypress, 78), "PressKeyN" },
	{ makeevkey(ev_keyrelease, 78), "ReleaseKeyN" },
	{ makeevkey(ev_keyboard, 79), "KeyO" },
	{ makeevkey(ev_keypress, 79), "PressKeyO" },
	{ makeevkey(ev_keyrelease, 79), "ReleaseKeyO" },
	{ makeevkey(ev_keyboard, 80), "KeyP" },
	{ makeevkey(ev_keypress, 80), "PressKeyP" },
	{ makeevkey(ev_keyrelease, 80), "ReleaseKeyP" },
	{ makeevkey(ev_keyboard, 81), "KeyQ" },
	{ makeevkey(ev_keypress, 81), "PressKeyQ" },
	{ makeevkey(ev_keyrelease, 81), "ReleaseKeyQ" },
	{ makeevkey(ev_keyboard, 82), "KeyR" },
	{ makeevkey(ev_keypress, 82), "PressKeyR" },
	{ makeevkey(ev_keyrelease, 82), "ReleaseKeyR" },
	{ makeevkey(ev_keyboard, 83), "KeyS" },
	{ makeevkey(ev_keypress, 83), "PressKeyS" },
	{ makeevkey(ev_keyrelease, 83), "ReleaseKeyS" },
	{ makeevkey(ev_keyboard, 84), "KeyT" },
	{ makeevkey(ev_keypress, 84), "PressKeyT" },
	{ makeevkey(ev_keyrelease, 84), "ReleaseKeyT" },
	{ makeevkey(ev_keyboard, 85), "KeyU" },
	{ makeevkey(ev_keypress, 85), "PressKeyU" },
	{ makeevkey(ev_keyrelease, 85), "ReleaseKeyU" },
	{ makeevkey(ev_keyboard, 86), "KeyV" },
	{ makeevkey(ev_keypress, 86), "PressKeyV" },
	{ makeevkey(ev_keyrelease, 86), "ReleaseKeyV" },
	{ makeevkey(ev_keyboard, 87), "KeyW" },
	{ makeevkey(ev_keypress, 87), "PressKeyW" },
	{ makeevkey(ev_keyrelease, 87), "ReleaseKeyW" },
	{ makeevkey(ev_keyboard, 88), "KeyX" },
	{ makeevkey(ev_keypress, 88), "PressKeyX" },
	{ makeevkey(ev_keyrelease, 88), "ReleaseKeyX" },
	{ makeevkey(ev_keyboard, 89), "KeyY" },
	{ makeevkey(ev_keypress, 89), "PressKeyY" },
	{ makeevkey(ev_keyrelease, 89), "ReleaseKeyY" },
	{ makeevkey(ev_keyboard, 90), "KeyZ" },
	{ makeevkey(ev_keypress, 90), "PressKeyZ" },
	{ makeevkey(ev_keyrelease, 90), "ReleaseKeyZ" },
	{ makeevkey(ev_keyboard, 48), "Key0" },
	{ makeevkey(ev_keypress, 48), "PressKey0" },
	{ makeevkey(ev_keyrelease, 48), "ReleaseKey0" },
	{ makeevkey(ev_keyboard, 49), "Key1" },
	{ makeevkey(ev_keypress, 49), "PressKey1" },
	{ makeevkey(ev_keyrelease, 49), "ReleaseKey1" },
	{ makeevkey(ev_keyboard, 50), "Key2" },
	{ makeevkey(ev_keypress, 50), "PressKey2" },
	{ makeevkey(ev_keyrelease, 50), "ReleaseKey2" },
	{ makeevkey(ev_keyboard, 51), "Key3" },
	{ makeevkey(ev_keypress, 51), "PressKey3" },
	{ makeevkey(ev_keyrelease, 51), "ReleaseKey3" },
	{ makeevkey(ev_keyboard, 52), "Key4" },
	{ makeevkey(ev_keypress, 52), "PressKey4" },
	{ makeevkey(ev_keyrelease, 52), "ReleaseKey4" },
	{ makeevkey(ev_keyboard, 53), "Key5" },
	{ makeevkey(ev_keypress, 53), "PressKey5" },
	{ makeevkey(ev_keyrelease, 53), "ReleaseKey5" },
	{ makeevkey(ev_keyboard, 54), "Key6" },
	{ makeevkey(ev_keypress, 54), "PressKey6" },
	{ makeevkey(ev_keyrelease, 54), "ReleaseKey6" },
	{ makeevkey(ev_keyboard, 55), "Key7" },
	{ makeevkey(ev_keypress, 55), "PressKey7" },
	{ makeevkey(ev_keyrelease, 55), "ReleaseKey7" },
	{ makeevkey(ev_keyboard, 56), "Key8" },
	{ makeevkey(ev_keypress, 56), "PressKey8" },
	{ makeevkey(ev_keyrelease, 56), "ReleaseKey8" },
	{ makeevkey(ev_keyboard, 57), "Key9" },
	{ makeevkey(ev_keypress, 57), "PressKey9" },
	{ makeevkey(ev_keyrelease, 57), "ReleaseKey9" },
};
#pragma warning( pop )